{
  "openapi": "3.0.1",
  "info": {
    "title": "Vitis Vision Service",
    "description": "OpenAPI documentation for Vitis Vision Service",
    "contact": {
      "name": "Vitis Vision",
      "url": "https://vitisvision.com",
      "email": "vitisvision@gmail.com"
    },
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:8181",
      "description": "Local Server"
    }
  ],
  "security": [
    {
      "Bearer Auth": []
    }
  ],
  "tags": [
    {
      "name": "Vine",
      "description": "Endpoints for managing vine details in a block"
    },
    {
      "name": "Block",
      "description": "Endpoints for managing block details in a vineyard"
    },
    {
      "name": "Authentication",
      "description": "Endpoints for user authentication and registration"
    },
    {
      "name": "Group",
      "description": "Endpoints for managing group details in a vineyard"
    },
    {
      "name": "Staff",
      "description": "Endpoints for managing staff details in a vineyard"
    },
    {
      "name": "Vineyard",
      "description": "Endpoints for managing vineyards details"
    },
    {
      "name": "Database Backup",
      "description": "APIs to perform database backup operations"
    },
    {
      "name": "User",
      "description": "Endpoints for user management"
    },
    {
      "name": "Device",
      "description": "Endpoint for device details management in a vineyard"
    }
  ],
  "paths": {
    "/api/v1/vineyards/{vineyardId}": {
      "get": {
        "tags": [
          "Vineyard"
        ],
        "summary": "Get a vineyard",
        "description": "Get a vineyard with the provided id",
        "operationId": "getVineyard",
        "parameters": [
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVineyardResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Vineyard"
        ],
        "summary": "Update a vineyard",
        "description": "Update a vineyard with the provided details",
        "operationId": "updateVineyard",
        "parameters": [
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VineyardRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVineyardResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vineyard"
        ],
        "summary": "Delete a vineyard",
        "description": "Delete a vineyard with the provided id",
        "operationId": "deleteVineyard",
        "parameters": [
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vineyards/{vineyardId}/staff": {
      "get": {
        "tags": [
          "Staff"
        ],
        "summary": "Get all staff",
        "description": "Get all staff in a vineyard by providing the vineyard id, authenticated user and pageable details",
        "operationId": "getAllStaff",
        "parameters": [
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePageableResponseListStaffResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Staff"
        ],
        "summary": "Update staff",
        "description": "Update staff details in a vineyard by providing the vineyard id and staff details",
        "operationId": "updateStaff",
        "parameters": [
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseStaffResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Staff"
        ],
        "summary": "Hire a staff",
        "description": "Hire a staff in a vineyard by providing the staff details and vineyard id",
        "operationId": "hireStaff",
        "parameters": [
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Staff"
        ],
        "summary": "Fire a staff",
        "description": "Fire a staff in a vineyard by providing the staff details and vineyard id",
        "operationId": "fireStaff",
        "parameters": [
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vineyards/{vineyardId}/groups/{groupId}": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "Get a group in a vineyard",
        "description": "Get a group in a vineyard with the provided details",
        "operationId": "getGroup",
        "parameters": [
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseGroupResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Group"
        ],
        "summary": "Update a group in a vineyard",
        "description": "Update a group in a vineyard with the provided details",
        "operationId": "updateGroup",
        "parameters": [
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseGroupResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Group"
        ],
        "summary": "Delete a group in a vineyard",
        "description": "Delete a group in a vineyard with the provided details",
        "operationId": "deleteGroup",
        "parameters": [
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vineyards/{vineyardId}/blocks/{blockId}": {
      "get": {
        "tags": [
          "Block"
        ],
        "summary": "Get a block in a vineyard",
        "description": "Get a block in a vineyard with the provided details",
        "operationId": "getBlock",
        "parameters": [
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseBlockResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Block"
        ],
        "summary": "Update a block in a vineyard",
        "description": "Update a block in a vineyard with the provided details",
        "operationId": "updateBlock",
        "parameters": [
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseBlockResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Block"
        ],
        "summary": "Delete a block in a vineyard",
        "description": "Delete a block in a vineyard with the provided details",
        "operationId": "deleteBlock",
        "parameters": [
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vines/{vineId}/devices/{deviceId}": {
      "put": {
        "tags": [
          "Device"
        ],
        "summary": "Update the device details",
        "description": "Update the device details in a vineyard with the provided details",
        "operationId": "updateDevice",
        "parameters": [
          {
            "name": "vineId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDeviceResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Device"
        ],
        "summary": "Delete the device by id",
        "description": "Delete the device by id in a vineyard with the provided details",
        "operationId": "deleteDevice",
        "parameters": [
          {
            "name": "vineId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users",
        "description": "Get all users registered in the application",
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePageableResponseListUserResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user",
        "description": "Update the details of the user with the provided details",
        "operationId": "updateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUserResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user",
        "description": "Delete the currently authenticated user",
        "operationId": "deleteUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Change the password of the authenticated user",
        "description": "Change the password of the authenticated user with the provided details",
        "operationId": "changePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/blocks/{blockId}/vines/{vineId}": {
      "get": {
        "tags": [
          "Vine"
        ],
        "summary": "Get the vine details in a block",
        "description": "Get the vine details in a block with the provided details",
        "operationId": "getVine",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "vineId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVineResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Vine"
        ],
        "summary": "Update the vine details in a block",
        "description": "Update the vine details in a block with the provided details",
        "operationId": "updateVine",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "vineId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VineRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVineResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vine"
        ],
        "summary": "Delete the vine details in a block",
        "description": "Delete the vine details in a block with the provided details",
        "operationId": "deleteVine",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "vineId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vineyards": {
      "get": {
        "tags": [
          "Vineyard"
        ],
        "summary": "Get vineyards",
        "description": "Get a list of vineyards",
        "operationId": "getVineyards",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePageableResponseListVineyardResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vineyard"
        ],
        "summary": "Create a new vineyard",
        "description": "Create a new vineyard with the provided details",
        "operationId": "createVineyard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VineyardRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVineyardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vineyards/{vineyardId}/groups": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "Get all groups in a vineyard",
        "description": "Get all groups in a vineyard with the provided details",
        "operationId": "getGroups",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePageableResponseListGroupResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "Create a group in a vineyard",
        "description": "Create a group in a vineyard with the provided details",
        "operationId": "createGroup",
        "parameters": [
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseGroupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vineyards/{vineyardId}/groups/{groupId}/vines": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "Get all vines in a group",
        "description": "Get all vines in a group in a vineyard with the provided details",
        "operationId": "getVinesInGroup",
        "parameters": [
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePageableResponseListGroupVineResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "Add vines to a group",
        "description": "Add vines to a group in a vineyard with the provided details",
        "operationId": "addVinesToGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VinesGroupAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Group"
        ],
        "summary": "Remove vines from a group",
        "description": "Remove vines from a group in a vineyard with the provided details",
        "operationId": "removeVinesFromGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VinesGroupAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vineyards/{vineyardId}/blocks": {
      "get": {
        "tags": [
          "Block"
        ],
        "summary": "Get all blocks in a vineyard",
        "description": "Get all blocks in a vineyard with the provided details",
        "operationId": "getBlocks",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePageableResponseListBlockResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Block"
        ],
        "summary": "Create a new block in a vineyard",
        "description": "Create a new block in a vineyard with the provided details",
        "operationId": "creteBlock",
        "parameters": [
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseBlockResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vineyards/{vineyardId}/blocks/{blockId}/_report": {
      "post": {
        "tags": [
          "Block"
        ],
        "summary": "Generate a report for a block in a vineyard",
        "description": "Generate a report for a block in a vineyard with the provided details",
        "operationId": "generateBlockReport",
        "parameters": [
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "byte"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vines/{vineId}/devices": {
      "get": {
        "tags": [
          "Device"
        ],
        "summary": "Get the device details by id",
        "description": "Get the device details by id in a vineyard with the provided details",
        "operationId": "getDevice",
        "parameters": [
          {
            "name": "vineId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDeviceResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Create a new device in a vine",
        "description": "Create a new device in a vine with the provided details",
        "operationId": "createDevice",
        "parameters": [
          {
            "name": "vineId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDeviceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vines/{vineId}/devices/{deviceId}/deactivate": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Deactivate the device",
        "description": "Deactivate the device in a vineyard with the provided details",
        "operationId": "deactivateDevice",
        "parameters": [
          {
            "name": "vineId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vines/{vineId}/devices/{deviceId}/activate/{frequency}": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Activate the device with the provided frequency",
        "description": "Activate the device with the provided frequency in a vineyard with the provided details",
        "operationId": "activateDevice",
        "parameters": [
          {
            "name": "vineId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "frequency",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDeviceActivateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/unblock": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Unblock user",
        "description": "Unblock the user with the provided details",
        "operationId": "unblockUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBlockRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/block": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Block user",
        "description": "Block the user with the provided details",
        "operationId": "blockUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBlockRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/db-backups": {
      "get": {
        "tags": [
          "Database Backup"
        ],
        "summary": "Get backups",
        "description": "Get a list of file names of available backups in the configured folder",
        "operationId": "getBackups",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListDbBackupResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Database Backup"
        ],
        "summary": "Backup database",
        "description": "Backup database and store the result in the configured folder",
        "operationId": "backupDatabase",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/blocks/{blockId}/vines": {
      "get": {
        "tags": [
          "Vine"
        ],
        "summary": "Get all vines in a block",
        "description": "Get all vines in a block with the provided details",
        "operationId": "getVines",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePageableResponseListVineResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vine"
        ],
        "summary": "Create a new vine in a block",
        "description": "Create a new vine in a block with the provided details",
        "operationId": "createVine",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VineRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVineResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new user",
        "description": "Register a new user with the provided details",
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseAuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refresh an access token",
        "description": "Refresh an access token using the refresh token",
        "operationId": "refresh",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseAuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/authenticate": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticate a user",
        "description": "Authenticate a user with the provided credentials",
        "operationId": "authenticate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseAuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vineyards/{vineyardId}/groups/{groupId}/_vines_to_assign": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "getVinesToAssign",
        "parameters": [
          {
            "name": "vineyardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePageableResponseListGroupVineResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user with id",
        "description": "Get the details of the user with the given id",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get the currently authenticated user",
        "description": "Get the details of the currently authenticated user",
        "operationId": "getMe",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/demo/hello": {
      "get": {
        "tags": [
          "demo-controller"
        ],
        "operationId": "hello",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{userId}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user with id",
        "description": "Delete the user with the given id",
        "operationId": "deleteUserById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseVoid"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "VineyardRequest": {
        "required": [
          "city",
          "companyName",
          "dbaName",
          "email",
          "phoneNumber",
          "streetAddress"
        ],
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string"
          },
          "dbaName": {
            "type": "string"
          },
          "streetAddress": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipCode": {
            "pattern": "^[0-9]{5}(?:-[0-9]{4})?$",
            "type": "string"
          },
          "phoneNumber": {
            "pattern": "^[0-9]{10}$",
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "ApiError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "100 CONTINUE",
              "101 SWITCHING_PROTOCOLS",
              "102 PROCESSING",
              "103 EARLY_HINTS",
              "103 CHECKPOINT",
              "200 OK",
              "201 CREATED",
              "202 ACCEPTED",
              "203 NON_AUTHORITATIVE_INFORMATION",
              "204 NO_CONTENT",
              "205 RESET_CONTENT",
              "206 PARTIAL_CONTENT",
              "207 MULTI_STATUS",
              "208 ALREADY_REPORTED",
              "226 IM_USED",
              "300 MULTIPLE_CHOICES",
              "301 MOVED_PERMANENTLY",
              "302 FOUND",
              "302 MOVED_TEMPORARILY",
              "303 SEE_OTHER",
              "304 NOT_MODIFIED",
              "305 USE_PROXY",
              "307 TEMPORARY_REDIRECT",
              "308 PERMANENT_REDIRECT",
              "400 BAD_REQUEST",
              "401 UNAUTHORIZED",
              "402 PAYMENT_REQUIRED",
              "403 FORBIDDEN",
              "404 NOT_FOUND",
              "405 METHOD_NOT_ALLOWED",
              "406 NOT_ACCEPTABLE",
              "407 PROXY_AUTHENTICATION_REQUIRED",
              "408 REQUEST_TIMEOUT",
              "409 CONFLICT",
              "410 GONE",
              "411 LENGTH_REQUIRED",
              "412 PRECONDITION_FAILED",
              "413 PAYLOAD_TOO_LARGE",
              "413 REQUEST_ENTITY_TOO_LARGE",
              "414 URI_TOO_LONG",
              "414 REQUEST_URI_TOO_LONG",
              "415 UNSUPPORTED_MEDIA_TYPE",
              "416 REQUESTED_RANGE_NOT_SATISFIABLE",
              "417 EXPECTATION_FAILED",
              "418 I_AM_A_TEAPOT",
              "419 INSUFFICIENT_SPACE_ON_RESOURCE",
              "420 METHOD_FAILURE",
              "421 DESTINATION_LOCKED",
              "422 UNPROCESSABLE_ENTITY",
              "423 LOCKED",
              "424 FAILED_DEPENDENCY",
              "425 TOO_EARLY",
              "426 UPGRADE_REQUIRED",
              "428 PRECONDITION_REQUIRED",
              "429 TOO_MANY_REQUESTS",
              "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
              "451 UNAVAILABLE_FOR_LEGAL_REASONS",
              "500 INTERNAL_SERVER_ERROR",
              "501 NOT_IMPLEMENTED",
              "502 BAD_GATEWAY",
              "503 SERVICE_UNAVAILABLE",
              "504 GATEWAY_TIMEOUT",
              "505 HTTP_VERSION_NOT_SUPPORTED",
              "506 VARIANT_ALSO_NEGOTIATES",
              "507 INSUFFICIENT_STORAGE",
              "508 LOOP_DETECTED",
              "509 BANDWIDTH_LIMIT_EXCEEDED",
              "510 NOT_EXTENDED",
              "511 NETWORK_AUTHENTICATION_REQUIRED"
            ]
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        }
      },
      "ApiResponseVineyardResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "data": {
            "$ref": "#/components/schemas/VineyardResponse"
          }
        }
      },
      "VineyardResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "companyName": {
            "type": "string"
          },
          "dbaName": {
            "type": "string"
          },
          "streetAddress": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "lastUpdatedBy": {
            "type": "string"
          }
        }
      },
      "StaffRequest": {
        "required": [
          "staffId"
        ],
        "type": "object",
        "properties": {
          "staffId": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "vineyardRole": {
            "type": "string"
          }
        }
      },
      "ApiResponseStaffResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "data": {
            "$ref": "#/components/schemas/StaffResponse"
          }
        }
      },
      "StaffResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "GroupRequest": {
        "required": [
          "description",
          "formationReason",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "formationReason": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "ApiResponseGroupResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "data": {
            "$ref": "#/components/schemas/GroupResponse"
          }
        }
      },
      "GroupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "formationReason": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "lastUpdatedBy": {
            "type": "string"
          }
        }
      },
      "BlockRequest": {
        "required": [
          "name",
          "partitioningType",
          "rowOrientation",
          "rowSpacing",
          "trellisSystemType",
          "vineSpacing"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "partitioningType": {
            "type": "string"
          },
          "rowSpacing": {
            "maximum": 1000,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "type": "number",
            "format": "double"
          },
          "vineSpacing": {
            "maximum": 1000,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "type": "number",
            "format": "double"
          },
          "rowOrientation": {
            "type": "string"
          },
          "trellisSystemType": {
            "type": "string"
          }
        }
      },
      "ApiResponseBlockResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "data": {
            "$ref": "#/components/schemas/BlockResponse"
          }
        }
      },
      "BlockResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "partitioningType": {
            "type": "string"
          },
          "rowSpacing": {
            "type": "number",
            "format": "double"
          },
          "vineSpacing": {
            "type": "number",
            "format": "double"
          },
          "rowOrientation": {
            "type": "string"
          },
          "trellisSystemType": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "lastUpdatedBy": {
            "type": "string"
          }
        }
      },
      "DeviceRequest": {
        "required": [
          "description",
          "deviceType",
          "manufacturer",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "installationDate": {
            "type": "string"
          },
          "deviceType": {
            "type": "string"
          },
          "manufacturer": {
            "type": "string"
          }
        }
      },
      "ApiResponseDeviceResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "data": {
            "$ref": "#/components/schemas/DeviceResponse"
          }
        }
      },
      "DeviceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "lastUpdatedBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "installationDate": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deviceType": {
            "type": "string"
          },
          "manufacturer": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "UserRequest": {
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string"
          }
        }
      },
      "ApiResponseUserResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "data": {
            "$ref": "#/components/schemas/UserResponse"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "lastUpdatedBy": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "vineyardId": {
            "type": "string"
          },
          "blocked": {
            "type": "boolean"
          }
        }
      },
      "VineRequest": {
        "required": [
          "bolesCount",
          "formationType",
          "rowNumber",
          "variety",
          "vineNumber"
        ],
        "type": "object",
        "properties": {
          "vineNumber": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "rowNumber": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "variety": {
            "type": "string"
          },
          "bolesCount": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "plantingDate": {
            "type": "string"
          },
          "formationType": {
            "type": "string"
          }
        }
      },
      "ApiResponseVineResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "data": {
            "$ref": "#/components/schemas/VineResponse"
          }
        }
      },
      "VineResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "lastUpdatedBy": {
            "type": "string"
          },
          "vineNumber": {
            "type": "integer",
            "format": "int32"
          },
          "rowNumber": {
            "type": "integer",
            "format": "int32"
          },
          "variety": {
            "type": "string"
          },
          "bolesCount": {
            "type": "integer",
            "format": "int32"
          },
          "plantingDate": {
            "type": "string"
          },
          "formationType": {
            "type": "string"
          }
        }
      },
      "ApiResponseVoid": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "data": {
            "type": "object"
          }
        }
      },
      "VinesGroupAssignmentRequest": {
        "required": [
          "vineIds"
        ],
        "type": "object",
        "properties": {
          "vineIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "BlockReportRequest": {
        "required": [
          "aggregationInterval"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "aggregationInterval": {
            "maximum": 1440,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiResponseDeviceActivateResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "data": {
            "$ref": "#/components/schemas/DeviceActivateResponse"
          }
        }
      },
      "DeviceActivateResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "UserBlockRequest": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RegisterRequest": {
        "required": [
          "email",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "ApiResponseAuthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "data": {
            "$ref": "#/components/schemas/AuthResponse"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          }
        }
      },
      "AuthenticationRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "ChangePasswordRequest": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          },
          "confirmPassword": {
            "type": "string"
          }
        }
      },
      "ApiResponseString": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "data": {
            "type": "string"
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ApiResponsePageableResponseListVineyardResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "data": {
            "$ref": "#/components/schemas/PageableResponseListVineyardResponse"
          }
        }
      },
      "PageMetadata": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PageableResponseListVineyardResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VineyardResponse"
            }
          },
          "pageMetadata": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "ApiResponsePageableResponseListStaffResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "data": {
            "$ref": "#/components/schemas/PageableResponseListStaffResponse"
          }
        }
      },
      "PageableResponseListStaffResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StaffResponse"
            }
          },
          "pageMetadata": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "ApiResponsePageableResponseListGroupResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "data": {
            "$ref": "#/components/schemas/PageableResponseListGroupResponse"
          }
        }
      },
      "PageableResponseListGroupResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupResponse"
            }
          },
          "pageMetadata": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "ApiResponsePageableResponseListGroupVineResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "data": {
            "$ref": "#/components/schemas/PageableResponseListGroupVineResponse"
          }
        }
      },
      "GroupVineResponse": {
        "type": "object",
        "properties": {
          "vineId": {
            "type": "integer",
            "format": "int32"
          },
          "vineNumber": {
            "type": "integer",
            "format": "int32"
          },
          "rowNumber": {
            "type": "integer",
            "format": "int32"
          },
          "variety": {
            "type": "string"
          },
          "bolesCount": {
            "type": "integer",
            "format": "int32"
          },
          "plantingDate": {
            "type": "string"
          },
          "formationType": {
            "type": "string"
          },
          "blockId": {
            "type": "string"
          }
        }
      },
      "PageableResponseListGroupVineResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupVineResponse"
            }
          },
          "pageMetadata": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "ApiResponsePageableResponseListBlockResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "data": {
            "$ref": "#/components/schemas/PageableResponseListBlockResponse"
          }
        }
      },
      "PageableResponseListBlockResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlockResponse"
            }
          },
          "pageMetadata": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "ApiResponsePageableResponseListUserResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "data": {
            "$ref": "#/components/schemas/PageableResponseListUserResponse"
          }
        }
      },
      "PageableResponseListUserResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResponse"
            }
          },
          "pageMetadata": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "ApiResponseListDbBackupResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbBackupResponse"
            }
          }
        }
      },
      "DbBackupResponse": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string"
          }
        }
      },
      "ApiResponsePageableResponseListVineResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "data": {
            "$ref": "#/components/schemas/PageableResponseListVineResponse"
          }
        }
      },
      "PageableResponseListVineResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VineResponse"
            }
          },
          "pageMetadata": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer Auth": {
        "type": "http",
        "description": "JWT bearer token security scheme",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
